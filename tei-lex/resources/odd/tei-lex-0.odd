<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Lex-0-base</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <revisionDesc>
            <change when="2019-12-16+01:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="lex" source="teipublisher.odd"> <elementSpec ident="entry" mode="add">
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="form" mode="add"/>
                <elementSpec ident="orth" mode="add">
                    <model predicate="parent::form/@type='lemma'" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="sense" mode="add">
                    <modelSequence>
            <model predicate="count(../sense) &gt; 1" behaviour="inline">
                <param name="content" value="@n"/>
                <outputRendition xml:space="preserve" scope="after">
                content: '. ';
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-weight: bold;
                </outputRendition>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                </elementSpec>
                <elementSpec ident="quote" mode="change">
                    <model predicate="ancestor::entry" behaviour="inline"/>
                    <model predicate="ancestor::p" behaviour="inline" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block                  level</desc>
            <outputRendition xml:space="preserve" scope="before">
            content: '‘';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '’';
            </outputRendition>
        </model>
                    <model behaviour="block" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block                  level</desc>
            <outputRendition xml:space="preserve">
            margin-left: 10px; margin-right: 10px;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="cit" mode="change">
                    <model predicate="ancestor::entry" behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="persName" mode="add">
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root(.))/note/node()"/>
        </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>